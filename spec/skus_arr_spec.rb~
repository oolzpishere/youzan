# coding: utf-8
require 'spec_helper'


RSpec.describe Youzan::KdtItemSkuUpdateArr do
  describe 'ItemsArr#items_arr' do
    before(:example) do
      @items_arr = Youzan::ItemsArr.new({:api_type => "kdt_items_onsale_get", :base_url => "get"}).items_arr
    end
    
    it 'http get and return items array, each one is a product' do
      expect(@items_arr.count).to be > 0
    end

    it 'check skus array properties_name' do
      # binding.pry
      skus_arr = Youzan::KdtItemSkuUpdateArr.new( @items_arr, {:api_type => "kdt_item_sku_update"}).parse_json
      
      expect(skus_arr.count).to be > 0
      
      @month = `date "+%m"`.to_i
      @day =  `date "+%d"`.to_i
      
      p "date: #{@month}月#{@day}日"
      skus_arr.each do |sku|
        # binding.pry
        p sku["properties_name"]
        expect( ood?(sku["properties_name"], @month, @day) ).to be true
      end 
    end

    #out of date
    def ood?(sku, month, day)
      if  /出行日期/.match(sku) ||  /出行时间/.match(sku)
        /(\d+)月/.match(sku)
        month_schedule = $1.to_i
        /(\d+)日/.match(sku)
        day_schedule = $1.to_i 

        if month_schedule > 0 && month > month_schedule
          return true
        elsif month < month_schedule
          return false
        elsif month = month_schedule && day_schedule > 0 && day >= day_schedule
          return true
        else
          return false
        end
        
      end
    end
    
  end 
end
